package test;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Vector;

import org.openqa.selenium.browserlaunchers.Sleeper;
import org.sikuli.basics.Settings;
import org.sikuli.script.Key;
import org.sikuli.script.Match;
import org.sikuli.script.Pattern;
import org.sikuli.script.Screen;
import org.sikuli.script.ScreenImage;

class structKey {
	String id;
	String key;
}
public class TestClass {


	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub

		// The name of the file to open.
        String fileName = System.getProperty("user.dir") + "\\temp.txt";
        Vector<structKey> value = new Vector<structKey>();
        
//        String[][] value;

        int i = 0;
        int cnt = 0;
        // This will reference one line at a time
        String strLine = null;

        try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = new FileReader(fileName);

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);

            int nLine = 0;
            while((strLine = bufferedReader.readLine()) != null) {

            	if(nLine % 2 == 0) {//ID
            		value.add(new structKey());
            		value.get(nLine / 2).id = strLine;
            	}
            	else		//Key
            	{
            		value.get(nLine / 2).key = strLine;
            		i = 0;
            		cnt++;
            	}
            	nLine++;
                //System.out.println(strLine);
            }   

            // Always close files.
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                fileName + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + fileName + "'");                  
            // Or we could just do this: 
            // ex.printStackTrace();
        }
        
		Screen screen = new Screen();
		ScreenImage img;

		Match m;

		//Settings.MoveMouseDelay = 0;
		Settings.TypeDelay = 0;
		System.out.print("Screen Created\n");

		Pattern windowsBtn = new Pattern(System.getProperty("user.dir") + "\\image\\windowsbutton.PNG");
		Pattern settingBtn = new Pattern(System.getProperty("user.dir") + "\\image\\settings.png");
		Pattern accountDetail = new Pattern(System.getProperty("user.dir") + "\\image\\account.png");
		Pattern changelicense = new  Pattern(System.getProperty("user.dir") + "\\image\\changelicense.png");
		
		Pattern licensetxt = new  Pattern(System.getProperty("user.dir") + "\\image\\licensetxt.png");
		Pattern licenseidcheck = new  Pattern(System.getProperty("user.dir") + "\\image\\licenseidchecked.png");
		Pattern idcheck = new  Pattern(System.getProperty("user.dir") + "\\image\\checkid.png");
		
		Pattern idtxt = new  Pattern(System.getProperty("user.dir") + "\\image\\idtxt.png");
		
		Pattern activatebtn_gray = new Pattern(System.getProperty("user.dir") + "\\image\\activateBtn_gray.png"); //Sahar free edition
		Pattern activatebtn = new Pattern(System.getProperty("user.dir") + "\\image\\activateBtn.png"); //Sahar Premium edition
		Pattern errormsg = new Pattern(System.getProperty("user.dir") + "\\image\\errormsg.png");
		Pattern errormsg2= new Pattern(System.getProperty("user.dir") + "\\image\\errormsg2.png");
		Pattern errormsg3= new Pattern(System.getProperty("user.dir") + "\\image\\errormsg3.png");
		Pattern okbutton = new Pattern(System.getProperty("user.dir") + "\\image\\okbutton.png");
		Pattern errorcancel = new Pattern(System.getProperty("user.dir") + "\\image\\errorcancel.png");
		Pattern dlgcancel = new Pattern(System.getProperty("user.dir") + "\\image\\dlgcancel.png");
		
		System.out.print("Patterns Created\n");
		screen.click(windowsBtn);
Sleeper.sleepTight(10);		
		screen.paste("C:\\Program Files\\Malwarebytes\\Anti-Malware\\mbam.exe");
		
Sleeper.sleepTight(1000);	//Sahar fix open program
		
		screen.type(Key.ENTER);
		
		
		//screen.doubleClick("1527163779200.png");
		System.out.println("BeforeSettingButton");
Sleeper.sleepTight(500); //Sahar was 2000
		screen.wait(settingBtn,100000);
		screen.click(settingBtn);
		System.out.println("AfterSettingButton");
		
		screen.wait(accountDetail);
		screen.click(accountDetail);


Sleeper.sleepTight(500); //Sahar was 5000
		for(i = 0; i <cnt; i++)
		{
			Sleeper.sleepTight(500); //Sahar was 1000
			
			System.out.println("Key = "+  value.get(i).key +  "ID = " +value.get(i).id);
			if(screen.exists(changelicense) != null || screen.exists(activatebtn_gray) != null)
			{
				System.out.println("--- Change License Key ---");
				if(screen.exists(changelicense) != null) screen.click(changelicense);
				else screen.click(activatebtn_gray);
				
				//Sleeper.sleepTight(3000);
			}
			else
			{
//				if(screen.exists(dlgcancel) !=null)
//					screen.click(dlgcancel);
//				screen.click(changelicense);
				
				screen.type(Key.ESC);

				//Sleeper.sleepTight(3000);
			}
Sleeper.sleepTight(1000); //Sahar was 5000
			screen.click(licensetxt);
			screen.paste(value.get(i).key);
			
Sleeper.sleepTight(10);
			m=screen.exists(licenseidcheck);// so look what happen i will run the bot.
			
			System.out.println("M = " + m);
			if(m == null)
			{
				System.out.println("--- id check button click ---");
				screen.click(idcheck.similar(0.9f));
			}

			screen.click(idtxt);
			screen.paste(value.get(i).id);
	Sleeper.sleepTight(10);
			//screen.click(okBtn);
	
			if(screen.exists(activatebtn) == null)	//Both Activate button not exist
			{
				System.out.println("--- button not activated");  
				continue;
			}
			else
			{
				System.out.println("--- button activate exist");
				if(screen.exists(activatebtn) != null) screen.click(activatebtn);
				
				Sleeper.sleepTight(500); //Sahar was 2000
				if(screen.exists(errormsg2) == null)	//usgage level has exceeded)
				{
					if( screen.exists(errormsg) == null)
					{
						if(screen.exists(errormsg3) == null)
						{
							System.out.println("---" + value.get(i).id + ":" + value.get(i).key);
							
						    try {
						        PrintWriter writer = new PrintWriter(new FileOutputStream(
						        	    new File(System.getProperty("user.dir") + "\\tmpoutput.txt"), true /* append = true */)); 
						        writer.append("License ID: " + value.get(i).id);
								//writer.append(":");
								writer.append(" License Key: " + value.get(i).key + "\n");
								System.getProperty("line.separator"); //Sahar new line
								writer.close();
						    } catch (FileNotFoundException e) {
						    	
						    }
						    
						    
							continue;
						}
						else {
							System.out.println("error Message3: Expired");
						}
					}
					else
					{
						System.out.println("error Message1");
						if(screen.exists(okbutton) != null)
							screen.click(okbutton);
						if(screen.exists(errorcancel) != null)
							screen.click(errorcancel);
						if(screen.exists(dlgcancel) != null)
							screen.click(dlgcancel);
						
						screen.type(Key.ESC);
						screen.type(Key.ESC);
						screen.type(Key.ESC);
						continue;
					}
				}
				else	// error skip!
				{
					System.out.println("error Message2");
					if(screen.exists(errorcancel) != null)
						screen.click(errorcancel);
					if(screen.exists(dlgcancel) != null)
						screen.click(dlgcancel);
					screen.type(Key.ESC);
					screen.type(Key.ESC);
					screen.type(Key.ESC);
					continue;
				}
			}
		}
		
//
//Sleeper.sleepTight(10);
//		//screen.click(okBtn);
//Sleeper.sleepTight(10);
//		//screen.click(mriBtn);
//Sleeper.sleepTight(1000);			//capture MRI screen
//		img = screen.capture();
//Sleeper.sleepTight(10);
//		img.save("D:\\autoscreen\\");

	}
}
